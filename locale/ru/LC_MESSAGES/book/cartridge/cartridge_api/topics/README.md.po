# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-17 09:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

msgid "Tarantool Cartridge â€” a framework for distributed applications development"
msgstr ""

msgid "Table of contents"
msgstr ""

msgid "`About Tarantool Cartridge`_"
msgstr ""

msgid "`Getting Started`_"
msgstr ""

msgid "`Create first application`_"
msgstr ""

msgid "`Next stages`_"
msgstr ""

msgid "`Contribution`_"
msgstr ""

msgid "`Building from source`_"
msgstr ""

msgid "`Running demo cluster`_"
msgstr ""

msgid "`Auto-generated sources`_"
msgstr ""

msgid "`Running tests`_"
msgstr ""

msgid "About Tarantool Cartridge"
msgstr ""

msgid ""
"Tarantool Cartridge allows you to easily develop Tarantool-based "
"applications and run them on one or more Tarantool instances organized "
"into a cluster."
msgstr ""

msgid ""
"As a cluster management tool, Tarantool Cartridge provides your cluster-"
"aware applications with the following key benefits:"
msgstr ""

msgid "horizontal scalability and load balancing via built-in automatic sharding;"
msgstr ""

msgid "asynchronous replication;"
msgstr ""

msgid "automatic failover;"
msgstr ""

msgid "centralized cluster control via GUI or API;"
msgstr ""

msgid "automatic configuration synchronization;"
msgstr ""

msgid "instance functionality segregation."
msgstr ""

msgid ""
"A Tarantool Cartridge cluster can segregate functionality between "
"instances via built-in and custom (user-defined) **cluster roles**. You "
"can toggle instances on and off on the fly during cluster operation. This"
" allows you to put different types of workloads (e.g., compute- and "
"transaction-intensive ones) on different physical servers with dedicated "
"hardware."
msgstr ""

msgid ""
"Tarantool Cartridge has an external utility called ``cartridge-cli` "
"<https://github.com/tarantool/cartridge-cli>`_ which provides you with "
"utilities and templates to help:"
msgstr ""

msgid "easily set up a development environment for your applications;"
msgstr ""

msgid "plug the necessary Lua modules;"
msgstr ""

msgid "pack the applications in an environment-independent way: together with"
msgstr ""

msgid "module binaries and Tarantool executables."
msgstr ""

msgid "Getting Started"
msgstr ""

msgid "Create first application"
msgstr ""

msgid ""
"To get a template application that uses Tarantool Cartridge and run it "
"you need to install `cartridge-cli` utility (supposing that `Tarantool "
"<https://www.tarantool.io/en/download/>`_ is already installed)."
msgstr ""

msgid "Long story short, copy-paste it into console:"
msgstr ""

msgid ""
"tarantoolctl rocks install cartridge-cli\n"
".rocks/bin/cartridge create --name myapp\n"
"cd myapp\n"
"../.rocks/bin/cartridge build\n"
"../.rocks/bin/cartridge start"
msgstr ""

msgid ""
"That's all! You can visit <a>http://localhost:8081</a> and see your "
"application Admin Web UI:"
msgstr ""

msgid ""
"<img width=\"640\" alt=\"cartridge-ui\" src=\"https://user-"
"images.githubusercontent.com/11336358/75786427-52820c00-5d76-11ea-"
"93a4-309623bda70f.png\">"
msgstr ""

msgid "Next stages"
msgstr ""

msgid "**See:**"
msgstr ""

msgid ""
"Step-by-step `getting started guide <https://github.com/tarantool"
"/cartridge-cli/blob/master/examples/getting-started-app/README.md>`_ in "
"the ``cartridge-cli`` repository."
msgstr ""

msgid ""
"`Documentation page "
"<https://www.tarantool.io/en/doc/2.2/book/cartridge/>`_"
msgstr ""

msgid "`API Reference <https://www.tarantool.io/en/rocks/cartridge/1.0/>`_"
msgstr ""

msgid "Contribution"
msgstr ""

msgid ""
"From the point of view of cartridge contributor, the workflow differs: it"
" implies building the project from source (documentation, webui) and "
"running tests."
msgstr ""

msgid "Building from source"
msgstr ""

msgid "Prerequisites:"
msgstr ""

msgid ""
"``tarantool``, ``tarantool-dev`` (instructions: "
"<a>https://www.tarantool.io/en/download/?v=1.10</a>);"
msgstr ""

msgid "``git``, ``gcc``, ``cmake``."
msgstr ""

msgid "The fastest way to build the project is to skip building Web UI:"
msgstr ""

msgid "CMAKE_DUMMY_WEBUI=true tarantoolctl rocks make"
msgstr ""

msgid "But if you want to build frontend too, you'll also need:"
msgstr ""

msgid ""
"``nodejs`` >= 8 (`instructions "
"<https://github.com/nodesource/distributions>`_);"
msgstr ""

msgid "``npm`` >= 6."
msgstr ""

msgid ""
"Documentation is generated from source code, but only if `ldoc` tool is "
"installed:"
msgstr ""

msgid ""
"tarantoolctl rocks install ldoc --server=http://rocks.moonscript.org\n"
"tarantoolctl rocks make"
msgstr ""

msgid "Running demo cluster"
msgstr ""

msgid ""
"There are several example entrypoints which are mostly used for testing, "
"but can also be useful for demo purposes or experiments:"
msgstr ""

msgid ""
"tarantoolctl rocks install cartridge-cli\n"
".rocks/bin/cartridge start\n"
"\n"
"\n"
"==============================================================================="
"\n"
"or select specific entrypoint\n"
"==============================================================================="
"\n"
"\n"
"# .rocks/bin/cartridge start --script ./test/entrypoint/srv_basic.lua"
msgstr ""

msgid ""
"It can be accesed trhough Web UI (<a>http://localhost:8081</a>) or with "
"binary protocol:"
msgstr ""

msgid "tarantoolctl connect admin@localhost:3301"
msgstr ""

msgid ""
"For more detailed information about `cartridge-cli` `see here "
"<https://github.com/tarantool/cartridge-cli#readme>`_."
msgstr ""

msgid "Auto-generated sources"
msgstr ""

msgid ""
"After GraphQL API is changed one shouldn't forget to fetch the schema "
"`doc/schema.graphql`:"
msgstr ""

msgid ""
"npm install graphql-cli@3.0.14\n"
"./fetch-schema.sh"
msgstr ""

msgid "Running tests"
msgstr ""

msgid ""
"==============================================================================="
"\n"
"Backend\n"
"==============================================================================="
"\n"
"\n"
"tarantoolctl rocks install luacheck\n"
"tarantoolctl rocks install luatest 0.5.0\n"
".rocks/bin/luacheck .\n"
".rocks/bin/luatest -v --exclude cypress\n"
"\n"
"\n"
"==============================================================================="
"\n"
"Frontend\n"
"==============================================================================="
"\n"
"\n"
"npm install cypress@3.4.1\n"
"./frontend-test.sh\n"
".rocks/bin/luatest -v -p cypress\n"
"\n"
"\n"
"==============================================================================="
"\n"
"Collect coverage\n"
"==============================================================================="
"\n"
"\n"
"tarantoolctl rocks install luacov\n"
"tarantoolctl rocks install luacov-console\n"
".rocks/bin/luatest -v --coverage\n"
".rocks/bin/luacov-console `pwd`\n"
".rocks/bin/luacov-console -s"
msgstr ""

